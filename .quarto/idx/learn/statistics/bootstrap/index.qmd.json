{"title":"Bootstrap resampling and tidy regression models","markdown":{"yaml":{"title":"Bootstrap resampling and tidy regression models","categories":["statistical analysis","bootstraping","tidying results","confidence intervals"],"type":"learn-subsection","weight":3,"description":"Apply bootstrap resampling to estimate uncertainty in model parameters.\n","toc":true,"toc-depth":2,"include-after-body":"../../../resources.html"},"headingText":"Introduction","containsRefs":false,"markdown":"\n\n```{r}\n#| label: \"setup\"\n#| include: false\n#| message: false\n#| warning: false\nsource(here::here(\"common.R\"))\n```\n\n```{r}\n#| label: \"load\"\n#| include: false\nlibrary(tidymodels)\npkgs <- c(\"tidymodels\")\n\ntheme_set(theme_bw() + theme(legend.position = \"top\"))\n```\n\n\n\nThis article only requires the tidymodels package.\n\nCombining fitted models in a tidy way is useful for performing bootstrapping or permutation tests. These approaches have been explored before, for instance by [Andrew MacDonald here](https://rstudio-pubs-static.s3.amazonaws.com/19698_a4c472606e3c43e4b94720506e49bb7b.html), and [Hadley has explored efficient support for bootstrapping](https://github.com/hadley/dplyr/issues/269) as a potential enhancement to dplyr. The tidymodels package [broom](https://broom.tidyverse.org/) fits naturally with [dplyr](https://dplyr.tidyverse.org/) in performing these analyses.\n\nBootstrapping consists of randomly sampling a data set with replacement, then performing the analysis individually on each bootstrapped replicate. The variation in the resulting estimate is then a reasonable approximation of the variance in our estimate.\n\nLet's say we want to fit a nonlinear model to the weight/mileage relationship in the `mtcars` data set.\n\n```{r}\nlibrary(tidymodels)\n\nggplot(mtcars, aes(mpg, wt)) + \n    geom_point()\n```\n\nWe might use the method of nonlinear least squares (via the `nls()` function) to fit a model.\n\n```{r}\nnlsfit <- nls(mpg ~ k / wt + b, mtcars, start = list(k = 1, b = 0))\nsummary(nlsfit)\n\nggplot(mtcars, aes(wt, mpg)) +\n    geom_point() +\n    geom_line(aes(y = predict(nlsfit)))\n```\n\nWhile this does provide a p-value and confidence intervals for the parameters, these are based on model assumptions that may not hold in real data. Bootstrapping is a popular method for providing confidence intervals and predictions that are more robust to the nature of the data.\n\n## Bootstrapping models\n\nWe can use the `bootstraps()` function in the rsample package to sample bootstrap replications. First, we construct 2000 bootstrap replicates of the data, each of which has been randomly sampled with replacement. The resulting object is an `rset`, which is a data frame with a column of `rsplit` objects.\n\nAn `rsplit` object has two main components: an analysis data set and an assessment data set, accessible via `analysis(rsplit)` and `assessment(rsplit)` respectively. For bootstrap samples, the analysis data set is the bootstrap sample itself, and the assessment data set consists of all the out-of-bag samples.\n\n```{r}\nset.seed(27)\nboots <- bootstraps(mtcars, times = 2000, apparent = TRUE)\nboots\n```\n\nLet's create a helper function to fit an `nls()` model on each bootstrap sample, and then use `purrr::map()` to apply this function to all the bootstrap samples at once. Similarly, we create a column of tidy coefficient information by unnesting.\n\n```{r}\nfit_nls_on_bootstrap <- function(split) {\n    nls(mpg ~ k / wt + b, analysis(split), start = list(k = 1, b = 0))\n}\n\nboot_models <-\n  boots %>% \n  mutate(model = map(splits, fit_nls_on_bootstrap),\n         coef_info = map(model, tidy))\n\nboot_coefs <- \n  boot_models %>% \n  unnest(coef_info)\n```\n\nThe unnested coefficient information contains a summary of each replication combined in a single data frame:\n\n```{r}\nboot_coefs\n```\n\n## Confidence intervals\n\nWe can then calculate confidence intervals (using what is called the [percentile method](https://www.uvm.edu/~dhowell/StatPages/Randomization%20Tests/ResamplingWithR/BootstMeans/bootstrapping_means.html)):\n\n```{r}\n#| label: \"percentiles\"\npercentile_intervals <- int_pctl(boot_models, coef_info)\npercentile_intervals\n```\n\nOr we can use histograms to get a more detailed idea of the uncertainty in each estimate:\n\n```{r}\nggplot(boot_coefs, aes(estimate)) +\n  geom_histogram(bins = 30) +\n  facet_wrap( ~ term, scales = \"free\") +\n  geom_vline(aes(xintercept = .lower), data = percentile_intervals, col = \"blue\") +\n  geom_vline(aes(xintercept = .upper), data = percentile_intervals, col = \"blue\")\n```\n\nThe rsample package also has functions for [other types of confidence intervals](https://rsample.tidymodels.org/reference/int_pctl.html). \n\n## Possible model fits\n\nWe can use `augment()` to visualize the uncertainty in the fitted curve. Since there are so many bootstrap samples, we'll only show a sample of the model fits in our visualization:\n\n```{r}\nboot_aug <- \n  boot_models %>% \n  sample_n(200) %>% \n  mutate(augmented = map(model, augment)) %>% \n  unnest(augmented)\n\nboot_aug\n```\n\n```{r}\nggplot(boot_aug, aes(wt, mpg)) +\n  geom_line(aes(y = .fitted, group = id), alpha = .2, col = \"blue\") +\n  geom_point()\n```\n\nWith only a few small changes, we could easily perform bootstrapping with other kinds of predictive or hypothesis testing models, since the `tidy()` and `augment()` functions works for many statistical outputs. As another example, we could use `smooth.spline()`, which fits a cubic smoothing spline to data:\n\n```{r}\nfit_spline_on_bootstrap <- function(split) {\n    data <- analysis(split)\n    smooth.spline(data$wt, data$mpg, df = 4)\n}\n\nboot_splines <- \n  boots %>% \n  sample_n(200) %>% \n  mutate(spline = map(splits, fit_spline_on_bootstrap),\n         aug_train = map(spline, augment))\n\nsplines_aug <- \n  boot_splines %>% \n  unnest(aug_train)\n\nggplot(splines_aug, aes(x, y)) +\n  geom_line(aes(y = .fitted, group = id), alpha = 0.2, col = \"blue\") +\n  geom_point()\n```\n\n\n\n## Session information {#session-info}\n\n```{r}\n#| label: \"si\"\n#| echo: false\nsmall_session(pkgs)\n```\n \n \n","srcMarkdownNoYaml":"\n\n```{r}\n#| label: \"setup\"\n#| include: false\n#| message: false\n#| warning: false\nsource(here::here(\"common.R\"))\n```\n\n```{r}\n#| label: \"load\"\n#| include: false\nlibrary(tidymodels)\npkgs <- c(\"tidymodels\")\n\ntheme_set(theme_bw() + theme(legend.position = \"top\"))\n```\n\n\n## Introduction\n\nThis article only requires the tidymodels package.\n\nCombining fitted models in a tidy way is useful for performing bootstrapping or permutation tests. These approaches have been explored before, for instance by [Andrew MacDonald here](https://rstudio-pubs-static.s3.amazonaws.com/19698_a4c472606e3c43e4b94720506e49bb7b.html), and [Hadley has explored efficient support for bootstrapping](https://github.com/hadley/dplyr/issues/269) as a potential enhancement to dplyr. The tidymodels package [broom](https://broom.tidyverse.org/) fits naturally with [dplyr](https://dplyr.tidyverse.org/) in performing these analyses.\n\nBootstrapping consists of randomly sampling a data set with replacement, then performing the analysis individually on each bootstrapped replicate. The variation in the resulting estimate is then a reasonable approximation of the variance in our estimate.\n\nLet's say we want to fit a nonlinear model to the weight/mileage relationship in the `mtcars` data set.\n\n```{r}\nlibrary(tidymodels)\n\nggplot(mtcars, aes(mpg, wt)) + \n    geom_point()\n```\n\nWe might use the method of nonlinear least squares (via the `nls()` function) to fit a model.\n\n```{r}\nnlsfit <- nls(mpg ~ k / wt + b, mtcars, start = list(k = 1, b = 0))\nsummary(nlsfit)\n\nggplot(mtcars, aes(wt, mpg)) +\n    geom_point() +\n    geom_line(aes(y = predict(nlsfit)))\n```\n\nWhile this does provide a p-value and confidence intervals for the parameters, these are based on model assumptions that may not hold in real data. Bootstrapping is a popular method for providing confidence intervals and predictions that are more robust to the nature of the data.\n\n## Bootstrapping models\n\nWe can use the `bootstraps()` function in the rsample package to sample bootstrap replications. First, we construct 2000 bootstrap replicates of the data, each of which has been randomly sampled with replacement. The resulting object is an `rset`, which is a data frame with a column of `rsplit` objects.\n\nAn `rsplit` object has two main components: an analysis data set and an assessment data set, accessible via `analysis(rsplit)` and `assessment(rsplit)` respectively. For bootstrap samples, the analysis data set is the bootstrap sample itself, and the assessment data set consists of all the out-of-bag samples.\n\n```{r}\nset.seed(27)\nboots <- bootstraps(mtcars, times = 2000, apparent = TRUE)\nboots\n```\n\nLet's create a helper function to fit an `nls()` model on each bootstrap sample, and then use `purrr::map()` to apply this function to all the bootstrap samples at once. Similarly, we create a column of tidy coefficient information by unnesting.\n\n```{r}\nfit_nls_on_bootstrap <- function(split) {\n    nls(mpg ~ k / wt + b, analysis(split), start = list(k = 1, b = 0))\n}\n\nboot_models <-\n  boots %>% \n  mutate(model = map(splits, fit_nls_on_bootstrap),\n         coef_info = map(model, tidy))\n\nboot_coefs <- \n  boot_models %>% \n  unnest(coef_info)\n```\n\nThe unnested coefficient information contains a summary of each replication combined in a single data frame:\n\n```{r}\nboot_coefs\n```\n\n## Confidence intervals\n\nWe can then calculate confidence intervals (using what is called the [percentile method](https://www.uvm.edu/~dhowell/StatPages/Randomization%20Tests/ResamplingWithR/BootstMeans/bootstrapping_means.html)):\n\n```{r}\n#| label: \"percentiles\"\npercentile_intervals <- int_pctl(boot_models, coef_info)\npercentile_intervals\n```\n\nOr we can use histograms to get a more detailed idea of the uncertainty in each estimate:\n\n```{r}\nggplot(boot_coefs, aes(estimate)) +\n  geom_histogram(bins = 30) +\n  facet_wrap( ~ term, scales = \"free\") +\n  geom_vline(aes(xintercept = .lower), data = percentile_intervals, col = \"blue\") +\n  geom_vline(aes(xintercept = .upper), data = percentile_intervals, col = \"blue\")\n```\n\nThe rsample package also has functions for [other types of confidence intervals](https://rsample.tidymodels.org/reference/int_pctl.html). \n\n## Possible model fits\n\nWe can use `augment()` to visualize the uncertainty in the fitted curve. Since there are so many bootstrap samples, we'll only show a sample of the model fits in our visualization:\n\n```{r}\nboot_aug <- \n  boot_models %>% \n  sample_n(200) %>% \n  mutate(augmented = map(model, augment)) %>% \n  unnest(augmented)\n\nboot_aug\n```\n\n```{r}\nggplot(boot_aug, aes(wt, mpg)) +\n  geom_line(aes(y = .fitted, group = id), alpha = .2, col = \"blue\") +\n  geom_point()\n```\n\nWith only a few small changes, we could easily perform bootstrapping with other kinds of predictive or hypothesis testing models, since the `tidy()` and `augment()` functions works for many statistical outputs. As another example, we could use `smooth.spline()`, which fits a cubic smoothing spline to data:\n\n```{r}\nfit_spline_on_bootstrap <- function(split) {\n    data <- analysis(split)\n    smooth.spline(data$wt, data$mpg, df = 4)\n}\n\nboot_splines <- \n  boots %>% \n  sample_n(200) %>% \n  mutate(spline = map(splits, fit_spline_on_bootstrap),\n         aug_train = map(spline, augment))\n\nsplines_aug <- \n  boot_splines %>% \n  unnest(aug_train)\n\nggplot(splines_aug, aes(x, y)) +\n  geom_line(aes(y = .fitted, group = id), alpha = 0.2, col = \"blue\") +\n  geom_point()\n```\n\n\n\n## Session information {#session-info}\n\n```{r}\n#| label: \"si\"\n#| echo: false\nsmall_session(pkgs)\n```\n \n \n"},"formats":{"html":{"identifier":{"display-name":"HTML","target-format":"html","base-format":"html"},"execute":{"fig-width":7,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":false,"eval":true,"cache":null,"freeze":"auto","echo":true,"output":true,"warning":true,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"engine":"knitr"},"render":{"keep-tex":false,"keep-typ":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":"none","code-overflow":"scroll","code-link":false,"code-line-numbers":false,"code-tools":false,"tbl-colwidths":"auto","merge-includes":true,"inline-includes":false,"preserve-yaml":false,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[],"notebook-links":true},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","toc":true,"toc-depth":2,"include-after-body":["../../../resources.html"],"output-file":"index.html"},"language":{"toc-title-document":"Table of contents","toc-title-website":"On this page","related-formats-title":"Other Formats","related-notebooks-title":"Notebooks","source-notebooks-prefix":"Source","section-title-abstract":"Abstract","section-title-appendices":"Appendices","section-title-footnotes":"Footnotes","section-title-references":"References","section-title-reuse":"Reuse","section-title-copyright":"Copyright","section-title-citation":"Citation","appendix-attribution-cite-as":"For attribution, please cite this work as:","appendix-attribution-bibtex":"BibTeX citation:","title-block-author-single":"Author","title-block-author-plural":"Authors","title-block-affiliation-single":"Affiliation","title-block-affiliation-plural":"Affiliations","title-block-published":"Published","title-block-modified":"Modified","callout-tip-title":"Tip","callout-note-title":"Note","callout-warning-title":"Warning","callout-important-title":"Important","callout-caution-title":"Caution","code-summary":"Code","code-tools-menu-caption":"Code","code-tools-show-all-code":"Show All Code","code-tools-hide-all-code":"Hide All Code","code-tools-view-source":"View Source","code-tools-source-code":"Source Code","code-line":"Line","code-lines":"Lines","copy-button-tooltip":"Copy to Clipboard","copy-button-tooltip-success":"Copied!","repo-action-links-edit":"Edit this page","repo-action-links-source":"View source","repo-action-links-issue":"Report an issue","back-to-top":"Back to top","search-no-results-text":"No results","search-matching-documents-text":"matching documents","search-copy-link-title":"Copy link to search","search-hide-matches-text":"Hide additional matches","search-more-match-text":"more match in this document","search-more-matches-text":"more matches in this document","search-clear-button-title":"Clear","search-detached-cancel-button-title":"Cancel","search-submit-button-title":"Submit","search-label":"Search","toggle-section":"Toggle section","toggle-sidebar":"Toggle sidebar navigation","toggle-dark-mode":"Toggle dark mode","toggle-reader-mode":"Toggle reader mode","toggle-navigation":"Toggle navigation","crossref-fig-title":"Figure","crossref-tbl-title":"Table","crossref-lst-title":"Listing","crossref-thm-title":"Theorem","crossref-lem-title":"Lemma","crossref-cor-title":"Corollary","crossref-prp-title":"Proposition","crossref-cnj-title":"Conjecture","crossref-def-title":"Definition","crossref-exm-title":"Example","crossref-exr-title":"Exercise","crossref-ch-prefix":"Chapter","crossref-apx-prefix":"Appendix","crossref-sec-prefix":"Section","crossref-eq-prefix":"Equation","crossref-lof-title":"List of Figures","crossref-lot-title":"List of Tables","crossref-lol-title":"List of Listings","environment-proof-title":"Proof","environment-remark-title":"Remark","environment-solution-title":"Solution","listing-page-order-by":"Order By","listing-page-order-by-default":"Default","listing-page-order-by-date-asc":"Oldest","listing-page-order-by-date-desc":"Newest","listing-page-order-by-number-desc":"High to Low","listing-page-order-by-number-asc":"Low to High","listing-page-field-date":"Date","listing-page-field-title":"Title","listing-page-field-description":"Description","listing-page-field-author":"Author","listing-page-field-filename":"File Name","listing-page-field-filemodified":"Modified","listing-page-field-subtitle":"Subtitle","listing-page-field-readingtime":"Reading Time","listing-page-field-categories":"Categories","listing-page-minutes-compact":"{0} min","listing-page-category-all":"All","listing-page-no-matches":"No matching items","notebook-preview-download":"Download Notebook","notebook-preview-back":"Back to Article"},"metadata":{"lang":"en","fig-responsive":true,"quarto-version":"1.4.92","theme":["cosmo","../../../styles.scss","../../../styles-frontpage.scss"],"quarto-required":">= 1.3.353","linestretch":1.6,"grid":{"body-width":"840px"},"title":"Bootstrap resampling and tidy regression models","categories":["statistical analysis","bootstraping","tidying results","confidence intervals"],"type":"learn-subsection","weight":3,"description":"Apply bootstrap resampling to estimate uncertainty in model parameters.\n"},"extensions":{"book":{"multiFile":true}}}},"projectFormats":["html"]}